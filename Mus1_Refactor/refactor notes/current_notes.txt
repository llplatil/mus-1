Step 0: Clean up Metadata (only if something is obviously conflicting or redundant)  
  - Ensure that plugin-specific fields aren’t hard-coded into base models.  
  - Confirm enumerations (ExperimentType, SessionStage, etc.) align with the plugins we intend to support.  
  - Remove or refactor any leftover logic that contradicts plugin-based validation.

Step 1: Implement "Add Experiment" With Plugin-Specified Fields, Validation, and Saving
  1. **Create or Update BasicCSVPlotPlugin**  
     - Write a `required_fields()` method returning at least `["csv_path"]`.  
     - In `validate_experiment(...)`, ensure:  
       - The CSV file path exists (e.g., using `Path(csv_path).exists()`).  
       - At least one overlapping body part with `project_state.project_metadata.master_body_parts` (or an equivalent list).  
     - Make sure a `PluginManager` can retrieve `required_fields()` for each plugin so the GUI knows which fields to show.

  2. **Enhance `ProjectManager.add_experiment(...)`**  
     - Collect the minimal data (experiment ID, subject ID, date, type) and store it in an `ExperimentMetadata` object.  
     - Store plugin-specific fields in `experiment.plugin_params` (e.g., `experiment.plugin_params["csv_path"] = user_csv_path`).  
     - Validate subject existence (e.g., if `subject_id` in `project_state.subjects`).  
     - Call `plugin_manager.validate_experiment(...)`.  
     - If valid, add the new `experiment` to `project_state.experiments` and save the project.

  3. **GUI Adjustments (Experiments Tab)**  
     - When the user selects an experiment type from a dropdown, query the plugin’s `required_fields()` and dynamically show only those fields (e.g., a CSV file path input for BasicCSVPlot).  
     - On “Save,” collect the user-input values (ID, date, type, plus any plugin-specific fields) and call `add_experiment(...)`.  
     - If `validate_experiment(...)` raises an error, display it to the user; otherwise, the new experiment gets saved and appears in the experiment list.

Following these steps provides a complete flow for BasicCSVPlot (and sets the pattern to expand for NOR, OpenField, or other plugins).